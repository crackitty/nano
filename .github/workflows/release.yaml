# Build and Release pipeline for VTS
# Changes may need to be made
name: Release pipeline

on:
  push:
    branches:
      - "*"
    tags:
      - "v*"
  workflow_dispatch:

env:
  IMAGE_REGISTRY: ghcr.io
  IMAGE_NAME: nano

jobs:
  maven-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: "8"
          distribution: "temurin"
          cache: maven

      - name: Set up Maven
        uses: s4u/setup-maven-action@v1.10.0
        with:
          java-version: "8"
          java-distribution: "temurin"
          maven-version: 3.9.4

      - name: Maven Build
        run: |
          mvn test package

      - name: Upload Warfile
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT }}.war
          path: target/${{ env.PROJECT }}.war
          retention-days: 5

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: maven-build

    steps:
      - name: Get repo name as ENV var
        run: echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV

      - name: Get author name as ENV var
        run: echo AUTHOR=$(curl -sSL ${{ github.event.repository.owner.url }} | jq -r '.name') >> $GITHUB_ENV

      - uses: actions/checkout@v4
        name: Checkout
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download warfile
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PROJECT }}.war
          path: ./target

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.authors=${{ env.AUTHOR }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=semver,pattern={{ version }}
            type=raw,label=latest,enabled={{ is_default_branch }}
            type=sha,format=long

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
